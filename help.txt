CREDLIFY(1)

NAME
    credlify - Initializes a node project with basic scaffolding.

SYNOPSIS
    credlify [--help] [--version] [<args>]

REQUIREMENTS
    CLI: Node 14.6.0 or higher
    Generated project: Node 14.6.0 or higher

DESCRIPTION
    Initializes a node project with build pipeline files, directory structure,
    and initial dependencies.
    
    If gulp-cli is installed, the resulting project can be built (with optional
    live development server) by running:
        
        gulp
    
    Available gulp tasks may be viewed with:
        
        gulp --tasks
    
    This script should be run after running npm init, and from the project's
    root directory, as it will create all files and directories relative to the
    current working directory. If no package.json file is found, the script will
    exit.
    
    When the script runs, the user will be prompted to choose names for the
    project structure directories.
    
    If any files already exist that conflict with those created by credlify, the
    script will exit.
    
    In an attempt to change as little of the existing project files as possible,
    credlify will only modify the following properties in package.json:
        
        - 'dependencies'
        - 'devDependencies'
        - 'type'
        - 'imports'
    
    This behavior can also be adjusted using the --no-deps and --no-package
    flags.
    
    Other properties (such as 'main', 'scripts', etc.) may be changed manually
    after the project scaffolding has been created.

OPTIONS
    -h, --help
        Show this help text.
    
    -v, --version
        Shows the package version number.
    
    --no-dirs
        Prevents directory structure from being generated. If this option is
        used, any project files in those directories will not be created.
    
    --no-files
        Prevents project files from being created.
    
    --no-deps
        Prevents initial project dependencies from being installed.
    
    --no-package
        Prevents package.json from being modified. If this option is used, the
        'type' and 'imports' properties will need to be added manually in order
        for the generated project to build.
    
    --indent <number>
        When adding the required properties to package.json, this will
        explicitly specify the number of indentation characters to use per level
        of indentation in package.json.
        
        If omitted, indentation will be detected automatically from
        package.json. If indentation cannot be detected, it will default to 4
        spaces.
        
        If --no-package is used, --indent will be ignored.
    
    --indent-type <type>
        When adding the required properties to package.json, this will
        explicitly specify the indentation character to use.
        
        If omitted or an invalid value of <type> is provided, the indentation
        character will be detected automatically from package.json. If
        indentation character cannot be detected, it will default to spaces.
        
        Possible values of <type>:
            
            space
            spaces
            tab
            tabs
        
        If --no-package is used, --indent-type will be ignored.
